plugins {
	id 'java'
}


repositories {
	jcenter()
}

sourceCompatibility = 11
targetCompatibility = 11
compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

def currentOS = org.gradle.internal.os.OperatingSystem.current()
def platform
if (currentOS.isWindows()) {
	platform = 'win'
} else if (currentOS.isLinux()) {
	platform = 'linux'
} else if (currentOS.isMacOsX()) {
	platform = 'mac'
}

dependencies {
	implementation "org.openjfx:javafx-base:11:${platform}"
	implementation "org.openjfx:javafx-graphics:11:${platform}"
	implementation "org.openjfx:javafx-controls:11:${platform}"
	implementation "org.openjfx:javafx-swing:11:${platform}"
}

task gradleWrapper(type: Wrapper)
task zip(type: Zip) {
	dependsOn gradleWrapper
	from projectDir

	include 'build.gradle'
	include 'gradle/**'
	include 'gradlew'
	include 'gradlew.bat'

	include 'src/main/java/patterns/state/tickets/*.java'
	include 'src/main/java/patterns/state/parser/FloatConverter0.java'
	include 'src/main/java/patterns/state/parser/FloatConverter1.java'
}

task zipSol(type: Zip) {
	baseName = baseName + 'Solutions'
	dependsOn gradleWrapper
	from projectDir

	include 'build.gradle'
	include 'gradle/**'
	include 'gradlew'
	include 'gradlew.bat'

	include 'src/main/java/patterns/state/parser/FloatConverter0.java'
	include 'src/main/java/patterns/state/parser/FloatConverter1.java'
	include 'src/main/java/patterns/state/parser/FloatConverter2.java'
	include 'src/main/java/patterns/state/parser/FloatConverter3.java'
	include 'src/main/java/patterns/state/parser/FloatConverter4.java'
}
